[general]
listen_ip = 0.0.0.0
listen_port = 123

[logging]
# Name of the SQLite database
# SQLite DB stores requests for easier lookup and/or dump
sqlitedb = db/ntpot.sqlite3

# Name of the log file where relevant output will be stored
log = logs/ntpot.log

# Size in MB after which log file is rotated
rotate_size = 10

# Number of old log files to keep
keep_backup_log_count = 5

# Separate thread periodically dumps local cache to database
# Value is in minutes (default: 5)
packet_flush_interval = 5

# Log *request* packet data in Base64 format
# Default is true 
log_req_packets = true

# Log *response* packet data in Base64 format
# Default is false
log_resp_packets = false

[blacklist]
# Blacklist section contains settings for periodic dumps of blacklist information
enabled = true

# Base name of the blacklist - 'daily', 'weekly', 'full' will be appended
blacklist_file = bl/blacklist-ntp

# Time to create daily blacklist in HH:MM format
daily_at = 13:00

# Blacklist packet threshold - all IPs which sent less packets than the threshold are considered scanner/attacker IPs.
# IPs with lots of packets are typically targets
blacklist_packet_threshold = 3

[attack]
# Threshold after which the responses will not be sent
# This parameter is crucial for stopping real DDoS attacks so it should be fairly low
packet_threshold = 10

# Time interval during which no packets/queries from a specific
# IP address having specific NTP mode have been observed.
# This time interval (in minutes) is used for detecting multiple attacks
# on the same IP address using same amplification method:
# If no queries have been seen from the IP address A and mode B for
# N minutes, this is qualified as a new attack.
# Default: 5 minutes
new_attack_detection_interval = 5

[alerting]
enabled = false

# SMTP host details
mail_host = mail.server.com
mail_port = 25
mail_username = username
mail_password = password

# Mail transport security.
# Available values:
#   None
#   SSL
#   STARTTLS
mail_sec = None

# Mail sender
mail_from = name@mail.com

# Comma-separated list of mail alert recepients
mail_to = name@mail.com

# Subject of the alert
mail_subject = New ntpot alert

# Comma-separated list of country codes for which mail notifications/alerts should be sent.
# Please refer to https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 for available codes.
# Length of the list directly affects honeypot performance because of additional lookup in case of the attack!
trigger_countries = GB

# Number of notifications that should be sent per 1 minute (60 seconds) in order to slow down multiple notifications.
# Notifications are put in a bounded queue with a fixed capacity.
# If the queue capacity is exceeded and message rate is also exceeded, oldest notifications are removed from the queue and lost.
# Default: 5  notifications per minute
notification_rate = 5

[NTP]
leap = 1

precision = -13

# Value in hex format
root_delay = 0x0196

# Maximum error of the local clock relative to the reference clock
# Value in hex format
dispersion = 0x500

# IP of the stratum 1/2 NTP server (depending on the stratum variable)
# Can be any valid IP address, but it is recommended to choose a valid NTP server
# Example: http://support.ntp.org/bin/view/Servers/StratumTwoTimeServers
# Default value: ntp2.tcpd.net (178.79.153.207)
reference_id = 178.79.153.207

# Offset of the reference timestamp to the current time
# Set to small random float
timestamp_offset = 4.123

[monlist]
# Local IP address in monlist context will be the local address from which the packet to the peer was sent.
# Since this address is usually different from listen_ip, it is listed separately.
# This value equals to 'daddr' field in monliest peer structure!
local_address = 10.0.2.15

# If 'generate_random' is set to true, then all monlist entries listed below are ignored and 'peers_num'random IP addresses and values are generated
# If 'generate_random' is false, then monlist peer structures below are used
generate_random = true

# Number of monlist peers.
# If 'generate_random' is false, then this number must be equal to number of peers listed below.
# If 'generate_random' is true, then 'peers_num' random peers will be generated
peers_num = 10

[peer-1]
# Every monlist peer structure has the entries listed below.
# In order to add new peer, copy the structure and rename the section to [peer-N], where N is new incremental peer id

# Number of seconds since the packet was last received for a given host
avg_int = 17

# Number of seconds since the packet was last received
last_int = 10

# Restrict bits (zero)
restr = 0

# Number of packets received
count = 34

# IP address of the peer
addr = 96.44.142.5

# IP address of the client (own IP address) - see 'local_address' above!
#daddr = 1.2.3.4

# Flags about destination, set to zero
flags = 0     

# Port of the last reception
port = 123

# Mode of the last packet (Usually 4 - server)
mode = 4

# NTP version - usually 2
version = 4

# Is this v6 packet - set to no
v6_flag = 0

[peer-2]
avg_int = 15
last_int = 12
restr = 0
count = 35
addr = 192.71.245.44
flags = 0     
port = 123
mode = 4
version = 4
v6_flag = 0

[peer-3]
avg_int = 16
last_int = 11
restr = 0
count = 34
addr = 131.211.8.244
flags = 0     
port = 123
mode = 4
version = 4
v6_flag = 0

[peer-4]
avg_int = 24
last_int = 16
restr = 0
count = 34
addr = 81.223.20.2
flags = 0     
port = 123
mode = 4
version = 4
v6_flag = 0

[peer-5]
avg_int = 14
last_int = 11
restr = 0
count = 35
addr = 41.78.128.17
flags = 0     
port = 123
mode = 4
version = 4
v6_flag = 0

[hpfeeds]
enabled = false
server = 10.0.0.1
port = 10000
identifier = ident
secret = secret
